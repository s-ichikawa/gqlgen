directive @hasRole(role: Role!) on FIELD_DEFINITION | OBJECT
directive @user(id: ID!) on MUTATION | QUERY | FIELD

enum Role {
    SUPER_ADMIN
    ADMIN
    OWNER
}

type Todo {
  id: ID!
  text: String!
  done: Boolean!
  user: User!
}

interface Person @hasRole(role: OWNER) {
    id: ID!
    name: String!
}

union Human = User | Cuctomer

type User implements Person {
  id: ID!
  name: String!
  pii: Pii
}

type Cuctomer implements Person {
    id: ID!
    name: String!
    pii: Pii
}

type Pii @hasRole(role: ADMIN) {
  id: ID!
  pii: String!
  superPii: String!  @hasRole(role: SUPER_ADMIN)
}

type Query {
  todos: [Todo!]!
  user(id: String!): User @hasRole(role: ADMIN)
  users: [User]
  humans: [Human]
}

input NewTodo {
  text: String!
  userId: String!
}

type Mutation {
  createTodo(input: NewTodo!): Todo!
  deleteUser(userID: ID!): Boolean @hasRole(role: OWNER)
}
